[versions]
frontendVersion = "1.1.0"
backendVersion = "2.0.1"
androidx-junit = "1.1.5"
commons-compress = "1.25.0"
espresso-core = "3.5.1"
gradle-android-tools = "8.1.4"
javapoet = "1.13.0"
junit = "4.13.2"
kamel-image = "0.8.3"
kotlin = "1.9.20"
kotlinx-coroutines-core = "1.7.3"
kotlinx-serialization-json = "1.6.1"
ktor = "2.3.6"
kotlinx-collections-immutable = "0.3.6"
logback-classic = "1.4.11"
mockk = "1.13.8"
napier = "2.6.1"
openai-client = "3.6.1"
multiplatform-settings = "1.1.1"
jetbrains-compose = "1.5.10"
build-konfig = "0.15.0"
androidx-compose-bom = "2023.10.01"
compose-compiler = "1.5.4"

[libraries]
commons-compress = { module = "org.apache.commons:commons-compress", version.ref = "commons-compress" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle-android-tools" }
io-ktor-ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
io-ktor-ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }
junit = { module = "junit:junit", version.ref = "junit" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamel-image" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines-core" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines-core" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization-json" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openai-client" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidx-compose-bom" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.plugin.serialization", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "build-konfig" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
